<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Loading some constants -->
  <xacro:include filename="$(find robocol_rov)/models/rov_version1/urdf/common.urdf.xacro"/>
  <!-- Loading file with sensor macros -->
  <xacro:include filename="$(find robocol_rov)/models/rov_version1/urdf/sensor_snippets.xacro"/>
  <!-- Loading vehicle's specific macros -->
  <xacro:include filename="$(find robocol_rov)/models/rov_version1/urdf/rov_snippets.xacro"/>

  <!--
    Vehicle's parameters
  -->

  <xacro:property name="mass" value="18.87"/>
  <xacro:property name="volume" value="1000"/>
  <!-- Center of gravity -->
  <xacro:property name="cog" value="0 0 0"/>
  <!-- Center of buoyancy -->
  <xacro:property name="cob" value="0 0 0"/>
  <!-- Fluid density -->
  <xacro:property name="rho" value="1028"/>

  <!-- Describing the dimensions of the vehicle's bounding box -->
  <xacro:property name="length" value="10"/>
  <xacro:property name="width"  value="10"/>
  <xacro:property name="height" value="10"/>

  <!-- Visual mesh file for the vehicle, usually in DAE (Collada) format -->
  <xacro:property name="visual_mesh_file" value="file://$(find robocol_rov)/models/rov_version1/mesh/robocol_rov_chasis.dae"/>

  <!-- Collision geometry mesh, usually in STL format (it is recommended to keep
  this geometry as simple as possible to improve the performance the physics engine
  regarding the computation of collision forces) -->
  <xacro:property name="collision_mesh_file" value="file://$(find robocol_rov)/models/rov_version1/mesh/robocol_rov_collision.stl"/>

  <!-- Vehicle macro -->
  <xacro:macro name="robocol_rov" params="namespace debug">

    <!-- Rigid body description of the base link -->
    <link name="${namespace}/base_link">
      <inertial>
        <mass value="${mass}" />
        <origin xyz="${cog}" rpy="0 0 0"/>
        <inertia ixx="525.39" ixy="1.44" ixz="33.41"
                 iyy="794.20" iyz="2.6"
                 izz="691.23" />
      </inertial>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${visual_mesh_file}" scale="1 1 1" />
        </geometry>
      </visual>

	<!-- Hacer un archivo con la collision bien y ponerlo en formato STL.-->
      <!-- <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${collision_mesh_file}" scale="1 1 1" />
        </geometry>
      </collision>-->
	
	<!-- por ahora, le pondre una caja igual a la de rexrov2. Se podrÃ­a poner una caja con las dimensiones del rov. -->
      <!-- bottom plate -->
      <collision>
        <origin xyz="0 0 -0.75" rpy="0 0 0"/>
        <geometry>
          <box size="2.56 1.50 0.10"/>
        </geometry>
      </collision>
      <!-- top plate -->
      <collision>
        <origin xyz="0 0 0.60" rpy="0 0 0"/>
        <geometry><box size="2.56 1.50 0.40"/></geometry>
      </collision>
      <!-- left / right sides -->
      <collision>
        <origin xyz="-0.20 0.70 -0.15" rpy="0 0 0"/>
        <geometry><box size="2.20 0.10 1.10"/></geometry>
      </collision>
      <collision>
        <origin xyz="-0.20 -0.70 -0.15" rpy="0 0 0"/>
        <geometry><box size="2.20 0.10 1.10"/></geometry>
      </collision>

    </link>

  <gazebo reference="${namespace}/base_link">
    <selfCollide>false</selfCollide>
  </gazebo>

  <!-- Dummy link for the frame in SNAME standard, Gazebo does not offer
  the option to change from ENU standard yet-->
  <xacro:dummy_link name="${namespace}/ned_link" />

  <joint name="ned_joint" type="revolute">
    <!-- This is revolute and not static since gazebo would remove ned_link -->
    <origin xyz="0 0 0" rpy="${pi} 0 0"/>
    <parent link="${namespace}/base_link"/>
    <child link="${namespace}/ned_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>

    <!-- Set up hydrodynamic plugin -->
    <gazebo>
      <plugin name="${namespace}_uuv_plugin" filename="libunderwater_object_ros_plugin.so">
        <!-- Fluid density to be used in the computation of buoyancy forces
        for all links specified below -->
        <fluid_density>${rho}</fluid_density>

        <!-- Name of the current velocity topic -->
        <flow_velocity_topic>hydrodynamics/current_velocity</flow_velocity_topic>

        <!-- Debug flag, if set to true, added-mass, damping and restoring
        forces and moments will be published in separate topics -->
        <debug>${debug}</debug>

        <!-- List of hydrodynamic models this robot's links -->
        <link name="${namespace}/base_link">
          <!-- This flag will make the link neutrally buoyant -->
          <neutrally_buoyant>0</neutrally_buoyant>

          <!-- Link's volume -->
          <volume>${volume}</volume>

          <!-- Link's bounding box, it is used to recalculate the immersed
          volume when close to the surface.
          This is a workaround the invalid bounding box given by Gazebo-->
          <box>
            <width>${width}</width>
            <length>${length}</length>
            <height>${height}</height>
          </box>

          <!-- Center of buoyancy -->
          <center_of_buoyancy>${cob}</center_of_buoyancy>

          <!--
          Choose one of the hydrodynamic models below, all are based on
          Fossen's equation of motion for underwater vehicles

          Reference:
          Fossen, Thor I. Handbook of marine craft hydrodynamics and motion
          control. John Wiley & Sons, 2011.-->
        
          <!-- Fossen's equation of motion -->
          <hydrodynamic_model>
            <type>fossen</type>
            <added_mass>
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
            </added_mass>
            <!--
            The linear damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
            -->
            <linear_damping>
              0 0 0 0 0 0
            </linear_damping>
            <!--
            The linear damping coefficients proportional to the forward speed
            can be provided as a diagonal (6 elements) or a full matrix (36 coefficients),
            like the added-mass coefficients above.
            This matrix is mostly useful for slender bodies (e.g. AUVs with torpedo shape)
            -->
            <linear_damping_forward_speed>
              0 0 0 0 0 0
            </linear_damping_forward_speed>
            <!--
            The quadratic damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
            -->
            <quadratic_damping>
              0 0 0 0 0 0
            </quadratic_damping>
          </hydrodynamic_model>

        </link>
      </plugin>
    </gazebo>

    <!-- Include the thruster modules -->
    <xacro:include filename="$(find robocol_rov)/models/rov_version1/urdf/rov_thrusters.xacro"/>

    <!-- Include the sensor modules -->
    <xacro:include filename="$(find robocol_rov)/models/rov_version1/urdf/rov_sensors.xacro"/>

  </xacro:macro>

</robot>
